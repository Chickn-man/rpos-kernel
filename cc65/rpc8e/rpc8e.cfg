#
#  LD65 Configuration for the RPOS Kernel on the RPC8e
#
##############################################################################
#
#  Copyright (C) 2023 Keegan Powers
#
#  This file is part of the RPOS Kernel
#
#  The RPOS Kernel is free software: you can redistribute it
#  and/or modify it under the terms of the GNU General Public
#  License as published by the Free Software Foundation, either
#  version 3 of the License, or (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program. If not, see <https://www.gnu.org/licenses/>.
#
##############################################################################

MEMORY {
    ZP:     start = $0,   size = $100, type = rw, define = yes;
    PSTACK: start = $100, size = $100, type = rw, define = yes;
    RSTACK: start = $200, size = $100, type = rw, define = yes;
    BUSOUT: start = $300, size = $100, type = rw, define = yes;
    BUSIN:  start = $400, size = $100, type = rw, define = yes;
    RAM:    start = $1000,size = $7000,type = rw, define = yes;
    PROG:   start = $8000,size = $7000,type = rw, define = yes;
    STUFF:  start = $f000,size = $fff, type = rw, define = yes;

}

SEGMENTS {
    ZEROPAGE: load = ZP,   type = zp, define = yes;
    STARTUP:  load = RAM, type = ro;
    DATA:     load = RAM, type = rw, define   = yes;
    ONCE:     load = RAM, type = ro, optional = yes;
    CODE:     load = RAM, type = ro;
    RODATA:   load = RAM, type = ro;
    BSS:      load = RAM, type = bss,define   = yes;
    HEAP:     load = RAM, type = bss,optional = yes;
}

FEATURES {
	CONDES: segment = STARTUP,
        type    = constructor,
        label   = __CONSTRUCTOR_TABLE__,
        count   = __CONSTRUCTOR_COUNT__;
	CONDES: segment = STARTUP,
        type    = destructor,
        label   = __DESTRUCTOR_TABLE__,
        count   = __DESTRUCTOR_COUNT__;
} 